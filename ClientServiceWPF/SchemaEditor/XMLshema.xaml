<Window x:Class="ClientServiceWPF.SchemaEditor.XMLshema"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ClientServiceWPF.SchemaEditor"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        mc:Ignorable="d"
        Name="this"
        Title="XMLshema" Height="674" Width="869.637" Style="{DynamicResource StyleWindow}">
    <Window.Resources>
        <local:XMLSchemaVM x:Key="VM"></local:XMLSchemaVM>
        <local:ConvectorEnum x:Key="ConvectorEnum"/>
        <local:ConvectorTypeEnum x:Key="ConvectorTypeEnum"/>
        <DataTemplate x:Key="DataTemplateTextBlock">
            <TextBlock Text="{Binding}"></TextBlock>
        </DataTemplate>
    </Window.Resources>
    <Window.DataContext>
        <Binding Source="{StaticResource VM}"></Binding>
    </Window.DataContext>

    <Window.InputBindings>
        <KeyBinding Gesture="CTRL+S" Command="{Binding Save }" />
        <KeyBinding Gesture="CTRL+G" Command="{Binding Compile}" />
    </Window.InputBindings>
    <Grid>
        <Menu VerticalAlignment="Top">
            <MenuItem Header="Файл">
                <MenuItem Header="Новый" Command="{Binding Open}"></MenuItem>
                <MenuItem Header="Открыть..." Command="{Binding Open}"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="Сохранить"  Command="{Binding Save}" ToolTip="CTRL+S"></MenuItem>
                <MenuItem Header="Сохранить как..."  Command="{Binding SaveAs}"></MenuItem>
                <MenuItem Header="Компиляция"  Command="{Binding Compile}" ToolTip="CTRL+G"></MenuItem>
                <Separator></Separator>
                <MenuItem Header="Выход" Name="MenuItemClose" Click="MenuItemClose_Click"></MenuItem>
            </MenuItem>
        </Menu>
        <GroupBox Header="Схема" Margin="0,23,326,0">
            <Grid>
                <TextBox Name="TextBoxPath" Height="20" VerticalAlignment="Top" Text="{Binding CurrentPath, Mode=OneWay}" IsReadOnly="True" Foreground="Gray" ></TextBox>
                <TreeView Margin="0,20,30,62" ItemsSource="{Binding Mode=OneWay, Path=Elements}"  Name="TreeViewSchema"   >
                    <TreeView.ItemTemplate>
                        <HierarchicalDataTemplate ItemsSource="{Binding Path=Elements}">
                            <StackPanel Orientation="Horizontal">
                                <Image Width="30" Height="30" Margin="0,0,5,0">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding format, Converter={StaticResource ConvectorTypeEnum}}" Value="{x:Static local:TypeEnum.COMPLEX}">
                                                    <Setter Property="Source" Value="/ClientServiceWPF;component/Image/Узел.png"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding format, Converter={StaticResource ConvectorTypeEnum}}" Value="{x:Static local:TypeEnum.DATE}">
                                                    <Setter Property="Source" Value="/ClientServiceWPF;component/Image/DataTypeDate.png"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding format, Converter={StaticResource ConvectorTypeEnum}}" Value="{x:Static local:TypeEnum.DATETIME}">
                                                    <Setter Property="Source" Value="/ClientServiceWPF;component/Image/DataTypeDate.png"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding format, Converter={StaticResource ConvectorTypeEnum}}" Value="{x:Static local:TypeEnum.NUMBER}">
                                                    <Setter Property="Source" Value="/ClientServiceWPF;component/Image/DataTypeDigit.png"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding format, Converter={StaticResource ConvectorTypeEnum}}" Value="{x:Static local:TypeEnum.STRING}">
                                                    <Setter Property="Source" Value="/ClientServiceWPF;component/Image/DataTypeText.png"></Setter>
                                                </DataTrigger>

                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                                <TextBlock  Margin="0,0,5,0" Text="{Binding Type}" FontWeight="Bold" FontSize="14" VerticalAlignment="Center"></TextBlock>
                                <TextBlock  Margin="0,0,5,0" Text="{Binding name}" FontSize="14" VerticalAlignment="Center"/>
                                <TextBlock  Margin="0,0,5,0" Text="{Binding format, Converter={StaticResource ConvectorEnum}}" FontSize="14" VerticalAlignment="Center" ></TextBlock>
                                <TextBlock  Margin="0,0,5,0" Text="[I]" FontWeight="Bold" FontSize="14" VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Unique}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Unique}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock  Margin="0,0,5,0" Text="[Ig]" FontWeight="Bold" FontSize="14" VerticalAlignment="Center">
                                    <TextBlock.Style>
                                        <Style TargetType="TextBlock">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding UniqueGlobal}" Value="True">
                                                    <Setter Property="Visibility" Value="Visible"></Setter>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding UniqueGlobal}" Value="False">
                                                    <Setter Property="Visibility" Value="Collapsed"></Setter>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                                <TextBlock  Margin="0,0,5,0" Text="{Binding formatStr}" Foreground="Gray" FontSize="14" VerticalAlignment="Center">

                                </TextBlock>

                            </StackPanel>

                        </HierarchicalDataTemplate>
                    </TreeView.ItemTemplate>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}"></Setter>
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"></Setter>
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <TreeView.ContextMenu>
                        <ContextMenu>
                            <MenuItem Name="MenuItemCopy" Header="Копировать элемент" Command="{Binding CopyCommand}" ToolTip="CTRL+C"></MenuItem>
                            <MenuItem Name="MenuItemPaste" Header="Вставить элемент" Command="{Binding PasteCommand}" ToolTip="CTRL+G"></MenuItem>
                        </ContextMenu>
                    </TreeView.ContextMenu>
                    <TreeView.InputBindings>
                        <KeyBinding Gesture="Ctrl+C" Command="{Binding CopyCommand}"></KeyBinding>
                        <KeyBinding Gesture="Ctrl+V" Command="{Binding PasteCommand}"></KeyBinding>
                    </TreeView.InputBindings>
                </TreeView>
                <Button x:Name="buttonDelete" HorizontalAlignment="Left" VerticalAlignment="Bottom" Width="26" Height="24" Style="{DynamicResource ButtonDelete}" Command="{Binding DeleteCommand}"/>
                <Button x:Name="buttonDeleteAll"  HorizontalAlignment="Left" Margin="31,0,0,0" VerticalAlignment="Bottom" Width="26" Height="24" Style="{DynamicResource ButtonDeleteAll}" Command="{Binding ClearCommand}"/>
                <Button x:Name="buttonFind" HorizontalAlignment="Left" Margin="210,0,0,0" VerticalAlignment="Bottom" Width="26" Height="24" Style="{DynamicResource ButtonFind}" Command="{Binding FindNodeCommand}" CommandParameter="{Binding ElementName=textBoxFind, Path=Text}"/>
                <Button x:Name="buttonUpdate" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="26" Height="24" Command="{Binding RefreshCommand}" Style="{DynamicResource ButtonUpd}"/>
                <TextBox x:Name="textBoxFind" HorizontalAlignment="Left" Height="23" Margin="62,0,0,1" TextWrapping="Wrap" Text="" VerticalAlignment="Bottom" Width="143" >
                    <TextBox.InputBindings>
                        <KeyBinding Command="{Binding FindNodeCommand}"  CommandParameter="{Binding ElementName=textBoxFind, Path=Text}" Key="Return" />
                    </TextBox.InputBindings>
                </TextBox>
                <Button x:Name="buttonUp" HorizontalAlignment="Right" VerticalAlignment="Top" Width="26" Height="24" Margin="0,22,-1,0" Style="{DynamicResource ButtonArrowUp}" Command="{Binding MoveUpCommand}" />
                <Button x:Name="buttonDown" HorizontalAlignment="Right" VerticalAlignment="Top" Width="26" Height="24" Margin="0,51,-1,0" Style="{DynamicResource ButtonArrowDown}" Command="{Binding MoveDownCommand}"/>
                <TextBlock  Margin="241,0,31,0" TextWrapping="Wrap" Text="{Binding StatusOperation, Mode=OneWay}" VerticalAlignment="Bottom" Height="24" TextAlignment="Center" />
                <TextBox Height="23" Margin="31,0,31,33" TextWrapping="Wrap" Text="{Binding targetNamespace, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Bottom"/>
                <Label Content="NS:" HorizontalAlignment="Left" Margin="0,0,0,34" VerticalAlignment="Bottom"/>
            </Grid>
        </GroupBox>
        <GroupBox HorizontalAlignment="Right" Width="321" Header="Действия" Margin="0,23,0,0">
            <Grid>
                <GroupBox Header="Новый" Height="64" VerticalAlignment="Top">
                    <Grid>
                        <Button x:Name="buttonNewNode" Content="Узел" HorizontalAlignment="Left" VerticalAlignment="Top" Width="81" Height="24" Margin="10,10,0,0" Command="{Binding AddNodeCommand}" Style="{DynamicResource MainButton}"  />
                        <Button x:Name="buttonNewChild" Content="Ветвь" HorizontalAlignment="Right" VerticalAlignment="Top" Width="81" Height="24" Margin="0,10,10,0" Command="{Binding AddChildCommand}" Style="{DynamicResource MainButton}" IsEnabled="{Binding CurrentElement.HasChild}" />
                    </Grid>
                </GroupBox>
                <GroupBox Header="Элемент" Margin="0,64,0,0">
                    <Grid>
                        <Label HorizontalAlignment="Left" Width="95" Height="26" VerticalAlignment="Top">Наименование</Label>
                        <TextBox Margin="95,0,0,0" Height="26" VerticalAlignment="Top" Text="{Binding CurrentElement.nameEdit, Mode=TwoWay}" ></TextBox>
                        <Label HorizontalAlignment="Left" Width="95" Height="26" VerticalAlignment="Top" Content="Тип" Margin="0,31,0,0"/>
                        <ComboBox Margin="95,31,0,0" Height="26" VerticalAlignment="Top" SelectedIndex="0" SelectedValue="{Binding CurrentElement.TypeEdit ,Mode=TwoWay}" ItemsSource="{Binding TypeElementSPR}" SelectedValuePath="Value" DisplayMemberPath="Name" />
                        <Label HorizontalAlignment="Left" Width="95" Height="26" VerticalAlignment="Top" Content="Формат" Margin="0,62,0,0"/>
                        <TextBox Margin="95,62,0,0" Height="98" VerticalAlignment="Top" IsReadOnly="True" Foreground="Gray"  Text="{Binding CurrentElement.formatStr, Mode=OneWay}" TextWrapping="Wrap"/>
                        <GroupBox Header="Редактор типа" Margin="0,165,0,44">
                            <Grid>
                                <Label HorizontalAlignment="Left" Width="76" Height="26" VerticalAlignment="Top" Content="Тип данных" Margin="1,0,0,0"/>
                                <ComboBox Margin="83,0,0,0" Height="26" VerticalAlignment="Top" SelectedValue="{Binding CurrentElement.format_type, Mode=TwoWay}"  ItemsSource="{Binding formatEnumSPR}" SelectedValuePath="Value" DisplayMemberPath="Name" />
                                <TabControl Margin="0,31,0,0" Height="163" VerticalAlignment="Top">
                                    <TabControl.Resources>
                                        <Style x:Key="TabStyle" TargetType="TabItem">
                                            <Setter Property="Visibility" Value="Hidden"></Setter>
                                        </Style>
                                    </TabControl.Resources>
                                    <TabItem Header="number" >
                                        <Grid>
                                            <Label HorizontalAlignment="Left" Width="87" Height="26" VerticalAlignment="Top">Всего знаков</Label>
                                            <TextBox Margin="136,0,0,0"  Height="26" VerticalAlignment="Top"  Text="{Binding CurrentElement.TypeSDigit.ZnakMest, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ></TextBox>
                                            <Label HorizontalAlignment="Left" Width="136" Height="26" VerticalAlignment="Top" Content="Знаков после запятой" Margin="0,31,0,0"/>
                                            <TextBox Margin="136,31,0,0" Height="26" VerticalAlignment="Top"  Text="{Binding CurrentElement.TypeSDigit.ZnakMestPosDot, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                            <ListBox Margin="136,62,0,0" Name="ListBoxEnumDigit"  SelectionMode="Extended" ItemsSource="{Binding CurrentElement.EnumDigit, NotifyOnSourceUpdated=True}" ItemTemplate="{StaticResource DataTemplateTextBlock}" SelectionChanged="ListBoxEnumDigit_OnSelectionChanged">
                                                <ListBox.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Удалить"  Command="{Binding RemoveDigitEnumCommand}"></MenuItem>
                                                    </ContextMenu>
                                                </ListBox.ContextMenu>
                                            </ListBox>
                                            <TextBox Name="TextBoxNumberEnum" Height="26" VerticalAlignment="Top" Margin="4,62,209,0" />
                                            <Button  Content="+" HorizontalAlignment="Right" VerticalAlignment="Top" Width="26" Height="24" Margin="0,62,178,0" Style="{DynamicResource MainButton}" Command="{Binding AddDigitEnumCommand}" CommandParameter="{Binding ElementName=TextBoxNumberEnum, Path=Text}" />
                                        </Grid>
                                        <TabItem.Style>
                                            <Style TargetType="TabItem" BasedOn="{StaticResource TabStyle}">
                                                <Setter Property="IsSelected" Value="False"></Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding CurrentElement.format_type, Mode=OneWay}" Value="{x:Static local:formatEnum.TypeSDigit}">
                                                        <Setter Property="IsSelected" Value="True"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TabItem.Style>
                                    </TabItem>
                                    <TabItem Header="string" >
                                        <Grid>
                                            <Label HorizontalAlignment="Left" Width="87" Height="26" VerticalAlignment="Top">Всего знаков</Label>
                                            <TextBox Margin="136,0,0,0" Height="26" VerticalAlignment="Top"  Text="{Binding CurrentElement.TypeSString.ZnakMest, UpdateSourceTrigger=PropertyChanged}"></TextBox>
                                            <ListBox Name="ListBoxStringEnum" Margin="136,62,0,0"  SelectionMode="Extended" ItemsSource="{Binding CurrentElement.EnumString}" ItemTemplate="{StaticResource DataTemplateTextBlock}" SelectionChanged="ListBoxStringEnum_OnSelectionChanged">
                                                <ListBox.ContextMenu>
                                                    <ContextMenu>
                                                        <MenuItem Header="Удалить" Command="{Binding RemoveStringEnumCommand}" ></MenuItem>
                                                    </ContextMenu>
                                                </ListBox.ContextMenu>
                                            </ListBox>
                                            <TextBox Text="" Height="26" VerticalAlignment="Top" Margin="4,62,209,0" Name="TextBoxNewValueString"/>
                                            <Button  Content="+" HorizontalAlignment="Right" VerticalAlignment="Top" Width="26" Height="24" Margin="0,62,178,0" Style="{DynamicResource MainButton}" Command="{Binding AddStringEnumCommand}" CommandParameter="{Binding ElementName=TextBoxNewValueString, Path=Text}"/>
                                        </Grid>
                                        <TabItem.Style>
                                            <Style TargetType="TabItem"  BasedOn="{StaticResource TabStyle}">
                                                <Setter Property="IsSelected" Value="False"></Setter>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding CurrentElement.format_type, Mode=OneWay}" Value="{x:Static local:formatEnum.TypeSString}">
                                                        <Setter Property="IsSelected" Value="True"></Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TabItem.Style>
                                    </TabItem>
                                </TabControl>
                                <CheckBox Content="Индекс" Height="19" VerticalAlignment="Top" Margin="6,201,213,0"  IsChecked="{Binding CurrentElement.UniqueEdit, Mode=TwoWay}"/>
                                <CheckBox Content="Глобальный" Height="19" VerticalAlignment="Top" Margin="77,201,113,0" IsChecked="{Binding CurrentElement.UniqueGlobalEdit, Mode=TwoWay}"/>
                            </Grid>
                        </GroupBox>
                        <Button x:Name="buttonAccept" Content="Изменить" VerticalAlignment="Bottom" Height="24"  Style="{DynamicResource MainButton}" Margin="10,0" Command="{Binding CommitCommand}" />
                    </Grid>
                </GroupBox>

            </Grid>
        </GroupBox>
    </Grid>
</Window>
